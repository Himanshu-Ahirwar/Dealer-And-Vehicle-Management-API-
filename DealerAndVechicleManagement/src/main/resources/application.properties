spring.application.name=DealerAndVechicleManagement

# ===================================================================
# SERVER CONFIGURATION
# ===================================================================
# Port where the application will run. Default is 8080.
server.port=8080

# ===================================================================
# POSTGRESQL DATABASE CONNECTION
# ===================================================================
# The JDBC URL for your PostgreSQL database.
spring.datasource.url=jdbc:postgresql://localhost:5432/dealerdb

# Your database username and password.
spring.datasource.username=postgres
spring.datasource.password=root

# The specific driver for PostgreSQL. Spring Boot often infers this, but it's good to be explicit.
spring.datasource.driver-class-name=org.postgresql.Driver

# ===================================================================
# JPA / HIBERNATE CONFIGURATION
# ===================================================================
# This property tells Hibernate what to do with the database schema when the application starts.
# 'update': Hibernate will update the schema if it differs from the entity definitions.
# 'validate': Validates the schema, making no changes. (Good for production)
# 'create-drop': Creates the schema on startup and drops it on shutdown. (Good for tests)
# 'create': Creates the schema but doesn't drop it.
spring.jpa.hibernate.ddl-auto=update

# The SQL dialect for PostgreSQL. This helps Hibernate generate optimized SQL.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Set to 'true' to see the actual SQL queries being run by Hibernate in the console.
# This is extremely useful for debugging during development.
spring.jpa.show-sql=true

# When show-sql is true, this will format the logged SQL to be more readable.
spring.jpa.properties.hibernate.format_sql=true

jwt.secret=aVeryLongAndSecureSecretKeyThatIsAtLeast256BitsLong